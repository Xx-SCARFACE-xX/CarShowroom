@startuml

title __CONTROLLERS's Class Diagram__\n

  package controllers {
    class AddController {
        - root : GridPane
        - submit : Button
        - addbrand : TextField
        - addmodel : TextField
        - addtype : TextField
        - addcolour : TextField
        - addstatus : TextField
        - addrprice : TextField
        - addsprice : TextField
        ~ onSubmit()
    }
  }
  

  package controllers {
    class CarTable {
        + vid : SimpleIntegerProperty
        + brand : SimpleStringProperty
        + model : SimpleStringProperty
        + type : SimpleStringProperty
        + colour : SimpleStringProperty
        + astatus : SimpleStringProperty
        + rprice : SimpleIntegerProperty
        + sprice : SimpleIntegerProperty
        + getVid()
        + vidProperty()
        + setVid()
        + getModel()
        + modelProperty()
        + setModel()
        + getType()
        + typeProperty()
        + setType()
        + getColour()
        + colourProperty()
        + setColour()
        + getAstatus()
        + astatusProperty()
        + setAstatus()
        + getRprice()
        + rpriceProperty()
        + setRprice()
        + getSprice()
        + spriceProperty()
        + setSprice()
    }
  }
  

  package controllers {
    class DeleteBuyController {
        - root : GridPane
        - RemoveCar : Button
        - removevid : TextField
        ~ onRemoveCar()
    }
  }
  

  package controllers {
    class LoginController {
        - root : GridPane
        - username : TextField
        - password : PasswordField
        - login : Button
        - register : Button
        - status : Label
        ~ onLogin()
        ~ onRegister()
    }
  }
  

  package controllers {
    class ManagementController {
        - root : GridPane
        - logOut : Button
        - buy : Button
        - rent : Button
        - add : Button
        - delete : Button
        - return1 : Button
        - search : Button
        - tableview : TableView<CarTable>
        - vidcol : TableColumn<CarTable, Integer>
        - brandcol : TableColumn<CarTable, String>
        - modelcol : TableColumn<CarTable, String>
        - typecol : TableColumn<CarTable, String>
        - colourcol : TableColumn<CarTable, String>
        - statuscol : TableColumn<CarTable, String>
        - rpricecol : TableColumn<CarTable, Integer>
        - spricecol : TableColumn<CarTable, Integer>
        ~ data : ObservableList<CarTable>
        ~ onLogOut()
        ~ onAdd()
        ~ onRent()
        ~ onReturn()
        ~ onDelete()
        ~ onBuy()
        ~ onSearch()
        ~ initialize()
        - buildData()
    }
  }
  

  package controllers {
    class RegisterController {
        - root : GridPane
        - regusername : TextField
        - regpassword : PasswordField
        - regconpassword : PasswordField
        - toregister : Button
        - backToLogin : Button
        - regstatus : Label
        ~ newRegister()
        ~ doesUserExist()
        ~ openLogin()
    }
  }
  

  package controllers {
    class RentController {
        - root : GridPane
        - RentCar : Button
        - rentvid : TextField
        ~ onRentCar()
    }
  }
  

  package controllers {
    class ReturnController {
        - root : GridPane
        - ReturnCar : Button
        - returnvid : TextField
        ~ onReturnCar()
    }
  }
  

  package controllers {
    class SearchController {
        - root : GridPane
        - searchvid : TextField
        - SearchCar : Button
        - status : Label
        - id1 : Label
        - brand1 : Label
        - model1 : Label
        - type1 : Label
        - colour1 : Label
        - status1 : Label
        ~ onSearchCar()
        ~ onBackToMng()
    }
  }
  

  package controllers {
    class WelcomeController {
        - root : GridPane
        - HeadToMng : Button
        ~ onHeadToMng()
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
